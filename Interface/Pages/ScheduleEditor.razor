@page "/ScheduleEditor"
@using Interface.Scripts
@inject IdService _idService
@inject HttpClient _http
@inject IJSRuntime _jsRuntime
@attribute [Authorize]

<div class="row">
<div class="col" id="light-bulbs-col">
    <div class="input-group">
        <RadzenDropDown Placeholder="House" AllowClear="false" TValue="Guid"
                        Data=@(_houses.Select(house => new {HouseId = house.Id, HouseName = house.Name}).Distinct())
                        TextProperty="HouseName" ValueProperty="HouseId" Value="_houseId"
                        Change=@(houseId => GetRooms(Guid.Parse(houseId.ToString()!)))/>
        <RadzenDropDown Placeholder="Room" AllowClear="false" TValue="Guid"
                        Data=@(_rooms.Select(room => new {RoomId = room.Id, RoomName = room.Name}).Distinct())
                        TextProperty="RoomName" ValueProperty="RoomId" Value="_roomId"
                        Change=@(roomId => GetLightBulbs(Guid.Parse(roomId.ToString()!)))/>
        <RadzenDropDown Placeholder="Light bulb" AllowClear="false" TValue="Guid"
                        Data=@(_lightBulbs.Select(lightBulb => new {LightBulbId = lightBulb.Id, LightBulbName = lightBulb.Name}).Distinct())
                        TextProperty="LightBulbName" ValueProperty="LightBulbId" Value="_newCommandLightBulbId"
                        Change=@(lightBulbId => SetNewCommandLightBulbId(Guid.Parse(lightBulbId.ToString()!)))/>
        <div class="input-group-append">
            <span class="btn btn-info" id="add-light-bulb-addon" style="margin: 0.5rem" @onclick="AddLightBulbCommand">
                Create light bulb command
            </span>
        </div>
    </div>
    <ul class="list-group list-group-vertical">
        @if (_lightBulbCommands is not null)
        {
            @foreach (var lightBulbIndex in Enumerable.Range(0, _lightBulbCommands.Count))
            {
                <li class="list-group-item">
                    <div class="card">
                        <h3 class="card-header" style="text-align: center">
                            @(_lightBulbs.SingleOrDefault(lightBulb =>
                                lightBulb.Id == _lightBulbCommands[lightBulbIndex].LightBulbId) is not null ?
                                _lightBulbs.SingleOrDefault(lightBulb =>
                                    lightBulb.Id == _lightBulbCommands[lightBulbIndex].LightBulbId)?.Name :
                                _lightBulbCommands[lightBulbIndex].LightBulbId)
                        </h3>
                        <div class="card-body" style="margin: auto; text-align: center">
                            <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                <button type="button" class="btn btn-dark"
                                        @onclick="@(() => SetOffColorAndPatchLightBulbCommand(_lightBulbCommands[lightBulbIndex].Id))">
                                    Off
                                </button>
                                <div class="col" style="text-align: center">
                                    <div class="row">
                                        <RadzenColorPicker @bind-Value="_lightColors[lightBulbIndex].RadzenColor"
                                                           ShowHSV="true" ShowRGBA="true" ShowColors="true"
                                                           Change=@(() => PatchLightBulbCommandColor(_lightBulbCommands[lightBulbIndex].Id))/>
                                    </div>
                                </div>
                                <button type="button" class="btn btn-light"
                                        @onclick="@(() => SetWhiteColorAndPatchLightBulbCommand(_lightBulbCommands[lightBulbIndex].Id))">
                                    On
                                </button>
                            </div>
                            <p/>
                            <div class="btn-group" role="group" aria-label="Basic mixed styles example" style="text-align: center">
                                <button type="button" class="btn btn-dark"
                                        @onclick="@(() => SetOffIntensityAndPatchLightBulbCommand(_lightBulbCommands[lightBulbIndex].Id))">
                                    Min
                                </button>

                                <div class="col" style="text-align: center">
                                    <div class="row">
                                        <label>
                                            Intensity: @(Math.Round((double) _lightBulbCommands[lightBulbIndex].
                                                           Intensity / byte.MaxValue * 100)) %
                                        </label>
                                    </div>
                                    <div class="row" style="margin: 0.5rem">
                                        <RadzenSlider @bind-Value="_lightBulbCommands[lightBulbIndex].Intensity" TValue="byte"
                                                      Min="byte.MinValue" Max="byte.MaxValue"/>
                                        @* MouseLeave=@(() => PatchLightBulbIntensity(_lightBulbs[lightBulbIndex].Id)) /> *@
                                        @* Change=@(() => PatchLightBulbIntensity(_lightBulbs[lightBulbIndex].Id)) /> *@
                                    </div>
                                    <div class="row">
                                        <button type="button" class="btn btn-info"
                                                style="margin: 0.25rem; height: 2.5rem; width: 100%"
                                                @onclick="@(() => PatchLightBulbCommandIntensity(_lightBulbCommands[lightBulbIndex].Id))">
                                            Press to set
                                        </button>
                                    </div>
                                </div>
                                <button type="button" class="btn btn-light"
                                        @onclick="@(() => SetMaxIntensityAndPatchLightBulbCommand(_lightBulbCommands[lightBulbIndex].Id))">
                                    Max
                                </button>
                            </div>
                        </div>
                        <div class="card-footer" style="text-align: center">
                            <button class="btn btn-danger" @onclick="@(() => DeleteLightBulbCommand(_lightBulbCommands[lightBulbIndex].Id))">
                                Delete
                            </button>
                        </div>
                    </div>
                </li>
            }
        }
    </ul>
</div>

<div class="col" id="doors-col">
    <div class="input-group">
        <RadzenDropDown Placeholder="House" AllowClear="false" TValue="Guid"
                        Data=@(_houses.Select(house => new {HouseId = house.Id, HouseName = house.Name}).Distinct())
                        TextProperty="HouseName" ValueProperty="HouseId" Value="_houseId"
                        Change=@(houseId => GetRooms(Guid.Parse(houseId.ToString()!)))/>
        <RadzenDropDown Placeholder="Room" AllowClear="false" TValue="Guid"
                        Data=@(_rooms.Select(room => new {RoomId = room.Id, RoomName = room.Name}).Distinct())
                        TextProperty="RoomName" ValueProperty="RoomId" Value="_roomId"
                        Change=@(roomId => GetDoors(Guid.Parse(roomId.ToString()!)))/>
        <RadzenDropDown Placeholder="Door" AllowClear="false" TValue="Guid"
                        Data=@(_doors.Select(door => new {DoorId = door.Id, DoorName = door.Name}).Distinct())
                        TextProperty="DoorName" ValueProperty="DoorId" Value="_newCommandDoorId"
                        Change=@(doorId => SetNewCommandDoorId(Guid.Parse(doorId.ToString()!)))/>
        <div class="input-group-append">
            <span class="btn btn-info" id="add-door-addon" style="margin: 0.5rem" @onclick="AddDoorCommand"> Add door </span>
        </div>
    </div>
    <ul class="list-group list-group-vertical">
        @if (_doorCommands is not null)
        {
            @foreach (var doorCommand in _doorCommands)
            {
                <li class="list-group-item">
                    <div class="card">
                        <h3 class="card-header" style="text-align: center"> @doorCommand.DoorId </h3>
                        <div class="card-body" style="margin: auto">
                            <div style="text-align: center; margin: 0.25rem">
                                <label>Status: </label>
                                @if (doorCommand.Locked)
                                {
                                    <span class="oi oi-lock-locked" aria-hidden="true" style="margin: 0.25rem"></span>
                                }
                                else
                                {
                                    <span class="oi oi-lock-unlocked" aria-hidden="true" style="margin: 0.25rem"></span>
                                }
                            </div>
                            <div class="btn-group" role="group" aria-label="Basic mixed styles example">
                                <button type="button" class="btn btn-danger"
                                        @onclick="@(() => SetTrueLockedAndPatchDoorCommand(doorCommand.Id))">
                                    Lock
                                </button>
                                <button type="button" class="btn btn-success"
                                        @onclick="@(() => SetFalseLockedAndPatchDoorCommand(doorCommand.Id))">
                                    Unlock
                                </button>
                            </div>
                        </div>
                        <div class="card-footer" style="text-align: center">
                            <button class="btn btn-danger" @onclick="@(() => DeleteDoorCommand(doorCommand.Id))"> Delete </button>
                        </div>
                    </div>
                </li>
            }
        }
    </ul>
</div>

<div class="col" id="thermostats-col">
    <div class="input-group">
        <RadzenDropDown Placeholder="House" AllowClear="false" TValue="Guid"
                        Data=@(_houses.Select(house => new {HouseId = house.Id, HouseName = house.Name}).Distinct())
                        TextProperty="HouseName" ValueProperty="HouseId" Value="_houseId"
                        Change=@(houseId => GetRooms(Guid.Parse(houseId.ToString()!)))/>
        <RadzenDropDown Placeholder="Room" AllowClear="false" TValue="Guid"
                        Data=@(_rooms.Select(room => new {RoomId = room.Id, RoomName = room.Name}).Distinct())
                        TextProperty="RoomName" ValueProperty="RoomId" Value="_roomId"
                        Change=@(roomId => GetThermostats(Guid.Parse(roomId.ToString()!)))/>
        <RadzenDropDown Placeholder="Thermostat" AllowClear="false" TValue="Guid"
                        Data=@(_thermostats.Select(thermostat => new {ThermostatId = thermostat.Id, ThermostatName = thermostat.Name}).Distinct())
                        TextProperty="ThermostatName" ValueProperty="ThermostatId" Value="_newCommandThermostatId"
                        Change=@(doorId => SetNewCommandThermostatId(Guid.Parse(doorId.ToString()!)))/>
        <div class="input-group-append">
            <span class="btn btn-info" style="margin: 0.5rem" id="add-thermostat-addon" @onclick="AddThermostatCommand">
                Add thermostat
            </span>
        </div>
    </div>
    <ul class="list-group list-group-vertical">
        @if (_thermostatCommands is not null)
        {
            @foreach (var thermostatCommand in _thermostatCommands)
            {
                <li class="list-group-item">
                    <div class="card">
                        <h3 class="card-header" style="text-align: center"> @thermostatCommand.ThermostatId </h3>
                        <div class="card-body" style="text-align: center; margin: auto">
                            <div style="text-align: center; margin: 0.25rem">
                                <label>Temperature: @thermostatCommand.Temperature &#8451;</label>
                            </div>
                            <div class="btn-group" role="group" aria-label="Basic mixed styles example" style="text-align: center">
                                <button type="button" class="btn btn-dark"
                                        @onclick="@(() => SetMinTemperatureAndPatchThermostatCommand(thermostatCommand.Id))">
                                    Min
                                </button>

                                <div class="col" style="text-align: center">
                                    <div class="row" style="margin: 0.5rem">
                                        <RadzenSlider @bind-Value="thermostatCommand.Temperature" TValue="decimal"
                                                      Min="7" Max="30" Step="0.5"/>
                                        @* MouseLeave=@(() => PatchLightBulbIntensity(_lightBulbs[lightBulbIndex].Id)) /> *@
                                        @* Change=@(() => PatchLightBulbIntensity(_lightBulbs[lightBulbIndex].Id)) /> *@
                                    </div>
                                    <div class="row">
                                        <button type="button" class="btn btn-info"
                                                style="margin: 0.25rem; height: 2.5rem; width: 100%"
                                                @onclick="@(() => PatchThermostatCommandTemperature(thermostatCommand.Id))">
                                            Press to set
                                        </button>
                                    </div>
                                </div>

                                <button type="button" class="btn btn-light"
                                        @onclick="@(() => SetMaxTemperatureAndPatchThermostatCommand(thermostatCommand.Id))">
                                    Max
                                </button>
                            </div>
                        </div>
                        <div class="card-footer" style="text-align: center">
                            <button class="btn btn-danger" @onclick="@(() => DeleteThermostatCommand(thermostatCommand.Id))">
                                Delete
                            </button>
                        </div>
                    </div>
                </li>
            }
        }
    </ul>
</div>
</div>

@code {

    protected override async Task OnInitializedAsync()
    {
        _scheduleId = await _idService.GetScheduleId();
        await GetHouses();
        await GetCommands();
    }

}