@page "/Scheduler"
@using Interface.Scripts
@using global::Shared.Models
@inject IdService _idService
@inject HttpClient _http
@inject IJSRuntime _jsRuntime
@inject NavigationManager _navManager
@attribute [Authorize]

<div class="card">
    <div class="card-header">
        <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" 
                aria-expanded="false" aria-controls="collapseExample">
            Add a new schedule
        </button>
    </div>
    <div class="collapse" id="collapseExample">
        <div class="card card-body">
            <RadzenTemplateForm TItem="Schedule" Data=@_newSchedule Submit=@AddSchedule InvalidSubmit=@OnInvalidSubmit>
                <RadzenFieldset Text="Personal information">
                    <div class="row" style="margin-bottom: 48px">
                        <div class="col-md-4 align-right">
                            <RadzenLabel Text="Schedule Name:" />
                        </div>
                        <div class="col">
                            <RadzenTextBox style="display: block" Name="ScheduleName" @bind-Value=@_newSchedule.Name />
                            <RadzenRequiredValidator Component="ScheduleName" Text="Please name the schedule"
                                                     Style="position: absolute"/>
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 48px">
                        <div class="col-md-4">
                            <RadzenLabel Text="Time:" />
                        </div>
                        <div class="col">
                            <RadzenDatePicker TValue="TimeSpan?" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"
                                              Name="Time" Value="_newSchedule.Time"/>
                            <RadzenRequiredValidator Component="Time" Text="Please select a time!"
                                                     Style="position: absolute"/>
                        </div>
                    </div>
                    <RadzenButton ButtonType="ButtonType.Submit" Text="Add Schedule" ></RadzenButton>
                </RadzenFieldset>
            </RadzenTemplateForm>
        </div>
    </div>
    
</div>
<div class="row">
    @if (_schedules is not null)
    {
        foreach (var schedule in _schedules)
        {
            <div class="card" style="width: 16rem; margin: 1rem">
                <h3 class="card-header" style="text-align: center"> @schedule.Name </h3>
                <div class="card-body" style="margin: auto">
                    <div class="btn-group">
                        <button class="btn btn-dark" @onclick="@(() => SetScheduleId(schedule.Id))"> Manage schedule </button>
                        <button class="btn btn-danger" @onclick="@(() => DeleteSchedule(schedule.Id))"> Delete schedule </button>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        _schedules = await _http.GetFromJsonAsync<IList<Schedule>>("schedules");
    }
}