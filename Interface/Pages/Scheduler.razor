@page "/Scheduler"
@using Interface.Scripts
@using global::Shared.Models
@inject IdService _idService
@inject HttpClient _http
@inject IJSRuntime _jsRuntime
@inject NavigationManager _navManager
@attribute [Authorize]

<div class="card">
    <div class="card card-body">
        <RadzenPanel Text="Create a new schedule" AllowCollapse="true" Collapsed=@(_addScheduleCollapsed)
                     Expand="@(() => _addScheduleCollapsed = false)" Collapse="@(() => _addScheduleCollapsed = true)">
            <RadzenTemplateForm TItem="Schedule" Data=@_newSchedule Submit=@AddSchedule InvalidSubmit=@OnInvalidSubmit>
                <RadzenFieldset Text="New schedule">
                    <div class="row" style="margin-bottom: 48px">
                        <div class="col-md-4 align-right">
                            <RadzenLabel Text="Schedule Name:"/>
                        </div>
                        <div class="col">
                            <RadzenTextBox style="display: block" Name="ScheduleName" @bind-Value=@_newSchedule.Name />
                            <RadzenRequiredValidator Component="ScheduleName" Text="Please name the schedule"
                                                     Style="position: absolute"/>
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 48px">
                        <div class="col-md-4">
                            <RadzenLabel Text="Time:"/>
                        </div>
                        <div class="col">
                            <RadzenDatePicker @bind-value=@_newScheduleTime AllowClear="false" TValue="DateTime" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"
                                              Name="Time" Change=@(args => OnChangeTime(args, "HH:mm")) />
                            <RadzenRequiredValidator Component="Time" Text="Please select a time!"
                                                     Style="position: absolute"/>
                        </div>
                    </div>
                    <div class="row" style="margin-bottom: 48px">
                        <div class="col-md-4">
                            <RadzenLabel Text="Repeat"/>
                        </div>
                        <div class="col">
                            <RadzenSelectBar @bind-Value=@_selectedDays TValue="IEnumerable<int>" Multiple="true"
                                             Disabled="true" Change=@OnChangeSelectedDays Visible="false">
                                <Items>
                                    <RadzenSelectBarItem Text="Monday" Value="1"/>
                                    <RadzenSelectBarItem Text="Tuesday" Value="2"/>
                                    <RadzenSelectBarItem Text="Wednesday" Value="4"/>
                                    <RadzenSelectBarItem Text="Thursday" Value="8"/>
                                    <RadzenSelectBarItem Text="Friday" Value="16"/>
                                    <RadzenSelectBarItem Text="Saturday" Value="32"/>
                                    <RadzenSelectBarItem Text="Sunday" Value="64"/>
                                </Items>
                            </RadzenSelectBar>
                            <p>
                                The select bar is not available due to technical difficulties generated during the
                                migration to .NET 6.0.
                            </p>
                            <p>Please use the following check-box system until a fix will be found.</p>
                            <RadzenCheckBoxList @bind-Value=@_selectedDays TValue="int"
                                                Change=@(args => OnChangeSelectedDays(args))>
                                <Items>
                                    <RadzenCheckBoxListItem Text="Monday" Value="1"/>
                                    <RadzenCheckBoxListItem Text="Tuesday" Value="2"/>
                                    <RadzenCheckBoxListItem Text="Wednesday" Value="4"/>
                                    <RadzenCheckBoxListItem Text="Thursday" Value="8"/>
                                    <RadzenCheckBoxListItem Text="Friday" Value="16"/>
                                    <RadzenCheckBoxListItem Text="Saturday" Value="32"/>
                                    <RadzenCheckBoxListItem Text="Sunday" Value="64"/>
                                </Items>
                            </RadzenCheckBoxList>
                        </div>
                    </div>
                    <RadzenButton ButtonType="ButtonType.Submit" Text="Add Schedule"></RadzenButton>
                </RadzenFieldset>
            </RadzenTemplateForm>
        </RadzenPanel>
    </div>
</div>
<ul class="list-group list-group-horizontal flex-wrap">
    @if (_schedules is not null)
    {
        foreach (var schedule in _schedules)
        {
            <li class="list-group-item" style="margin: 0.5rem">
                <div class="card" style="width: 16rem; margin: 1rem">
                    <h3 class="card-header" style="text-align: center"> @schedule.Name </h3>
                    <div class="card-body" style="margin: auto">
                        <div class="btn-group">
                            <button class="btn btn-dark" @onclick="@(() => SetScheduleId(schedule.Id))"> Manage schedule </button>
                            <button class="btn btn-danger" @onclick="@(() => DeleteSchedule(schedule.Id))"> Delete schedule </button>
                        </div>
                    </div>
                </div>
            </li>
        }
    }
</ul>

@code {

    protected override async Task OnInitializedAsync()
    {
        _schedules = await _http.GetFromJsonAsync<IList<Schedule>>("schedules");
    }

}