@page "/schedules"

@using Client.Utility
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components

@inject HttpClient _http
@inject IdService _idService
@inject IJSRuntime _jsRuntime
@inject NavigationManager _navManager

@attribute [Authorize]

<h1>Schedule Manager</h1>
<RadzenPanel Text="Create a new schedule" AllowCollapse="true" Collapsed=@(_addScheduleCollapsed) Style="margin: 0.5rem"
             Expand="@(() => _addScheduleCollapsed = false)" Collapse="@(() => _addScheduleCollapsed = true)">
    <RadzenTemplateForm TItem="Schedule" Data=@_newSchedule Submit=@AddSchedule InvalidSubmit=@OnInvalidSubmit>
        <RadzenFieldset Text="New schedule">
            <div class="row" style="margin-bottom: 48px">
                <div class="col-md-4 align-right">
                    <RadzenLabel Text="Schedule name"/>
                </div>
                <div class="col">
                    <RadzenTextBox style="display: block" Name="ScheduleName" @bind-Value="@_newSchedule.Name"/>
                    <RadzenRequiredValidator Component="ScheduleName" Text="Schedule name cannot be empty"
                                             Style="position: absolute"/>
                </div>
            </div>
            <div class="row" style="margin-bottom: 48px">
                <div class="col-md-4">
                    <RadzenLabel Text="Time:"/>
                </div>
                <div class="col">
                    <RadzenDatePicker @bind-value=@_newScheduleTime AllowClear="false" TValue="DateTime"
                                      ShowTime="true"
                                      TimeOnly="true" DateFormat="HH:mm" Name="Time"
                                      Change=@(args => OnChangeTime(args, "HH:mm"))/>
                    <RadzenRequiredValidator Component="Time" Text="Time cannot be empty" Style="position: absolute"/>
                </div>
            </div>
            <div class="row" style="margin-bottom: 48px">
                <div class="col-md-4">
                    <RadzenLabel Text="Repeat"/>
                </div>
                <div class="col">
                    <RadzenSelectBar @bind-Value="@_selectedDays" TValue="IEnumerable<int>" Multiple="true"
                                     Name="DaysSelector" Change=@OnChangeSelectedDays>
                        <Items>
                            <RadzenSelectBarItem Text="Monday" Value="1"/>
                            <RadzenSelectBarItem Text="Tuesday" Value="2"/>
                            <RadzenSelectBarItem Text="Wednesday" Value="4"/>
                            <RadzenSelectBarItem Text="Thursday" Value="8"/>
                            <RadzenSelectBarItem Text="Friday" Value="16"/>
                            <RadzenSelectBarItem Text="Saturday" Value="32"/>
                            <RadzenSelectBarItem Text="Sunday" Value="64"/>
                        </Items>
                    </RadzenSelectBar>
                    <RadzenLengthValidator Component="DaysSelector" Text="You should select at least a day"
                                           Style="position: absolute"/>
                </div>
            </div>
            <RadzenButton ButtonType="ButtonType.Submit" Text="Add schedule"></RadzenButton>
        </RadzenFieldset>
    </RadzenTemplateForm>
</RadzenPanel>
<RadzenPanel Text="Your schedules" Style="margin: 0.5rem">
    <div class="list-group list-group-horizontal flex-wrap">
        @if (_schedules is not null)
        {
            foreach (var schedule in _schedules)
            {
                <div class="card" style="width: 16rem; margin: 1rem">
                    <h3 class="card-header" style="text-align: center">
                        @schedule.Name <br>
                        @schedule.Time <br>
                        @GetDays(schedule.Days)
                    </h3>
                    <div class="card-body" style="margin: auto">
                        <div class="btn-group">
                            <button class="btn btn-dark" @onclick="@(() => SetScheduleId(schedule.Id))">
                                Manage schedule
                            </button>
                            <button class="btn btn-danger" @onclick="@(() => DeleteSchedule(schedule.Id))">
                                Delete schedule
                            </button>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="margin-bottom: 20px"/>
        }
    </div>
</RadzenPanel>